// <auto-generated />
using System;
using AliMartinCv.DataLayer.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AliMartinCv.DataLayer.Migrations
{
    [DbContext(typeof(AliMartinCvContext))]
    [Migration("20240715155104_AddGroupsAndVlogs")]
    partial class AddGroupsAndVlogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AliMartinCv.DataLayer.Entities.Vlog", b =>
                {
                    b.Property<Guid>("VlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.Property<string>("VlogDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VlogGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("VlogIsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VlogPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VlogShortDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("VlogSubGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VlogThumbnail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("VlogTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("VlogId");

                    b.HasIndex("VlogGroupId");

                    b.HasIndex("VlogSubGroupId");

                    b.ToTable("Vlogs");
                });

            modelBuilder.Entity("AliMartinCv.DataLayer.Entities.VlogGroup", b =>
                {
                    b.Property<Guid>("VlogGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VlogGroupParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VlogGroupTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("VlogGroupId");

                    b.HasIndex("VlogGroupParentId");

                    b.ToTable("vlogGroups");
                });

            modelBuilder.Entity("AliMartinCv.DataLayer.Entities.Vlog", b =>
                {
                    b.HasOne("AliMartinCv.DataLayer.Entities.VlogGroup", "VlogGroup")
                        .WithMany("Vlogs")
                        .HasForeignKey("VlogGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AliMartinCv.DataLayer.Entities.VlogGroup", "SubGroup")
                        .WithMany("SubGroupVlogs")
                        .HasForeignKey("VlogSubGroupId");

                    b.Navigation("SubGroup");

                    b.Navigation("VlogGroup");
                });

            modelBuilder.Entity("AliMartinCv.DataLayer.Entities.VlogGroup", b =>
                {
                    b.HasOne("AliMartinCv.DataLayer.Entities.VlogGroup", null)
                        .WithMany("SubGroups")
                        .HasForeignKey("VlogGroupParentId");
                });

            modelBuilder.Entity("AliMartinCv.DataLayer.Entities.VlogGroup", b =>
                {
                    b.Navigation("SubGroupVlogs");

                    b.Navigation("SubGroups");

                    b.Navigation("Vlogs");
                });
#pragma warning restore 612, 618
        }
    }
}
